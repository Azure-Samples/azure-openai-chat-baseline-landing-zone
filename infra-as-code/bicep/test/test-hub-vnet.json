{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "10456886513555905924"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region in which this architecture is deployed."
      }
    },
    "hubBaseName": {
      "type": "string",
      "defaultValue": "hub",
      "minLength": 3,
      "maxLength": 8,
      "metadata": {
        "description": "Base name for hub resources"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "log-hub",
      "metadata": {
        "description": "Log Analytics workspace name for the hub"
      }
    },
    "jumpBoxAdminName": {
      "type": "string",
      "defaultValue": "vmadmin",
      "minLength": 4,
      "maxLength": 20,
      "metadata": {
        "description": "Jump box admin username"
      }
    },
    "jumpBoxAdminPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 123,
      "metadata": {
        "description": "Jump box admin password"
      }
    }
  },
  "variables": {
    "hubVirtualNetworkAddressPrefix": "10.0.0.0/16",
    "azureFirewallSubnetPrefix": "10.0.1.0/26",
    "azureFirewallManagementSubnetPrefix": "10.0.1.64/26",
    "bastionSubnetPrefix": "10.0.2.0/26",
    "jumpBoxSubnetPrefix": "10.0.2.64/27",
    "dnsResolverInboundSubnetPrefix": "10.0.3.0/28",
    "dnsResolverOutboundSubnetPrefix": "10.0.3.16/28",
    "hubVirtualNetworkName": "[format('vnet-{0}', parameters('hubBaseName'))]",
    "privateDnsZones": [
      "privatelink.cognitiveservices.azure.com",
      "privatelink.services.ai.azure.com",
      "privatelink.openai.azure.com",
      "privatelink.search.windows.net",
      "privatelink.blob.core.windows.net",
      "privatelink.documents.azure.com",
      "privatelink.vaultcore.azure.net",
      "privatelink.azurewebsites.net"
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}/{1}', 'fw-egress-policy', 'DefaultNetworkRuleCollectionGroup')]",
      "properties": {
        "priority": 200,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "jump-box-egress",
            "priority": 1000,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "allow-dependencies",
                "ipProtocols": [
                  "Any"
                ],
                "sourceAddresses": [
                  "[variables('jumpBoxSubnetPrefix')]"
                ],
                "destinationAddresses": [
                  "*"
                ],
                "destinationPorts": [
                  "*"
                ]
              }
            ]
          },
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "spoke-egress",
            "priority": 1100,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "allow-spoke-dependencies",
                "ipProtocols": [
                  "Any"
                ],
                "sourceAddresses": [
                  "192.168.0.0/16"
                ],
                "destinationAddresses": [
                  "*"
                ],
                "destinationPorts": [
                  "*"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', 'fw-egress-policy')]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2024-05-01",
      "name": "[format('{0}/{1}', 'fw-egress-policy', 'DefaultApplicationRuleCollectionGroup')]",
      "properties": {
        "priority": 300,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "jump-box-egress",
            "priority": 1000,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "ApplicationRule",
                "name": "allow-dependencies",
                "protocols": [
                  {
                    "protocolType": "Https",
                    "port": 443
                  },
                  {
                    "protocolType": "Http",
                    "port": 80
                  }
                ],
                "fqdnTags": [],
                "webCategories": [],
                "targetFqdns": [
                  "*"
                ],
                "targetUrls": [],
                "terminateTLS": false,
                "sourceAddresses": [
                  "[variables('jumpBoxSubnetPrefix')]"
                ],
                "destinationAddresses": [],
                "httpHeadersToInsert": []
              }
            ]
          },
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "spoke-egress",
            "priority": 1100,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "ApplicationRule",
                "name": "allow-spoke-dependencies",
                "protocols": [
                  {
                    "protocolType": "Https",
                    "port": 443
                  }
                ],
                "fqdnTags": [],
                "webCategories": [],
                "targetFqdns": [
                  "*"
                ],
                "targetUrls": [],
                "terminateTLS": false,
                "sourceAddresses": [
                  "192.168.0.0/16"
                ],
                "destinationAddresses": [],
                "httpHeadersToInsert": []
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', 'fw-egress-policy')]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'fw-egress-policy', 'DefaultNetworkRuleCollectionGroup')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-11-01",
      "name": "[format('{0}/{1}', 'vm-jumpbox', 'enablevmAccess')]",
      "location": "[parameters('location')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "enableAutomaticUpgrade": false,
        "publisher": "Microsoft.Compute",
        "type": "VMAccessAgent",
        "typeHandlerVersion": "2.0",
        "settings": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-jumpbox')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-11-01",
      "name": "[format('{0}/{1}', 'vm-jumpbox', 'AzureMonitorWindowsAgent')]",
      "location": "[parameters('location')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "enableAutomaticUpgrade": true,
        "publisher": "Microsoft.Azure.Monitor",
        "type": "AzureMonitorWindowsAgent",
        "typeHandlerVersion": "1.34"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-jumpbox')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-11-01",
      "name": "[format('{0}/{1}', 'vm-jumpbox', 'DependencyAgentWindows')]",
      "location": "[parameters('location')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "enableAutomaticUpgrade": true,
        "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
        "type": "DependencyAgentWindows",
        "typeHandlerVersion": "9.10",
        "settings": {
          "enableAMA": "true"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-jumpbox')]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2025-02-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-05-01",
      "name": "[variables('hubVirtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('hubVirtualNetworkAddressPrefix')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": [
            "10.0.1.4"
          ]
        },
        "subnets": [
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "[variables('azureFirewallSubnetPrefix')]",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "AzureFirewallManagementSubnet",
            "properties": {
              "addressPrefix": "[variables('azureFirewallManagementSubnetPrefix')]",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "[variables('bastionSubnetPrefix')]",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "snet-jumpBoxes",
            "properties": {
              "addressPrefix": "[variables('jumpBoxSubnetPrefix')]",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', 'udr-internet-to-firewall')]"
              }
            }
          },
          {
            "name": "snet-dnsResolverInbound",
            "properties": {
              "addressPrefix": "[variables('dnsResolverInboundSubnetPrefix')]",
              "delegations": [
                {
                  "name": "Microsoft.Network/dnsResolvers",
                  "properties": {
                    "serviceName": "Microsoft.Network/dnsResolvers"
                  }
                }
              ],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "snet-dnsResolverOutbound",
            "properties": {
              "addressPrefix": "[variables('dnsResolverOutboundSubnetPrefix')]",
              "delegations": [
                {
                  "name": "Microsoft.Network/dnsResolvers",
                  "properties": {
                    "serviceName": "Microsoft.Network/dnsResolvers"
                  }
                }
              ],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', 'udr-internet-to-firewall')]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2024-05-01",
      "name": "udr-internet-to-firewall",
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "internet-to-firewall",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.1.4"
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "privateDnsZone",
        "count": "[length(variables('privateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2024-06-01",
      "name": "[variables('privateDnsZones')[copyIndex()]]",
      "location": "global"
    },
    {
      "copy": {
        "name": "privateDnsZoneVnetLink",
        "count": "[length(variables('privateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2024-06-01",
      "name": "[format('{0}/{1}', variables('privateDnsZones')[copyIndex()], format('link-to-{0}', variables('hubVirtualNetworkName')))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[copyIndex()])]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "pip-firewall-egress-00",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": "[pickZones('Microsoft.Network', 'publicIPAddresses', parameters('location'), 3)]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "pip-firewall-mgmt-00",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": "[pickZones('Microsoft.Network', 'publicIPAddresses', parameters('location'), 3)]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2024-05-01",
      "name": "fw-egress-policy",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "tier": "Basic"
        },
        "threatIntelMode": "Alert"
      }
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2024-05-01",
      "name": "fw-egress",
      "location": "[parameters('location')]",
      "zones": "[pickZones('Microsoft.Network', 'azureFirewalls', parameters('location'), 3)]",
      "properties": {
        "sku": {
          "name": "AZFW_VNet",
          "tier": "Basic"
        },
        "threatIntelMode": "Alert",
        "managementIpConfiguration": {
          "name": "pip-firewall-mgmt-00",
          "properties": {
            "publicIPAddress": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-firewall-mgmt-00')]"
            },
            "subnet": {
              "id": "[format('{0}/subnets/AzureFirewallManagementSubnet', resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName')))]"
            }
          }
        },
        "ipConfigurations": [
          {
            "name": "pip-firewall-egress-00",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-firewall-egress-00')]"
              },
              "subnet": {
                "id": "[format('{0}/subnets/AzureFirewallSubnet', resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName')))]"
              }
            }
          }
        ],
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', 'fw-egress-policy')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'fw-egress-policy', 'DefaultApplicationRuleCollectionGroup')]",
        "[resourceId('Microsoft.Network/firewallPolicies', 'fw-egress-policy')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-firewall-mgmt-00')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-firewall-egress-00')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'fw-egress-policy', 'DefaultNetworkRuleCollectionGroup')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "pip-bastion",
      "location": "[parameters('location')]",
      "zones": "[pickZones('Microsoft.Network', 'publicIPAddresses', parameters('location'), 3)]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "ddosSettings": {
          "ddosProtectionPlan": null,
          "protectionMode": "VirtualNetworkInherited"
        },
        "deleteOption": "Delete",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2024-05-01",
      "name": "[format('bastion-{0}', parameters('hubBaseName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "disableCopyPaste": false,
        "enableFileCopy": false,
        "enableIpConnect": false,
        "enableKerberos": false,
        "enableShareableLink": false,
        "enableTunneling": false,
        "enableSessionRecording": false,
        "scaleUnits": 2,
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-bastion')]"
              },
              "subnet": {
                "id": "[format('{0}/subnets/AzureBastionSubnet', resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-bastion')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-05-01",
      "name": "nic-jumpbox",
      "location": "[parameters('location')]",
      "properties": {
        "nicType": "Standard",
        "auxiliaryMode": "None",
        "auxiliarySku": "None",
        "enableIPForwarding": false,
        "enableAcceleratedNetworking": false,
        "ipConfigurations": [
          {
            "name": "primary",
            "properties": {
              "primary": true,
              "subnet": {
                "id": "[format('{0}/subnets/snet-jumpBoxes', resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName')))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "privateIPAddressVersion": "IPv4",
              "publicIPAddress": null,
              "applicationSecurityGroups": []
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2023-03-11",
      "name": "dcr-jumpbox",
      "location": "[parameters('location')]",
      "kind": "Windows",
      "properties": {
        "description": "Standard data collection rule for VM Insights",
        "dataSources": {
          "performanceCounters": [
            {
              "name": "VMInsightsPerfCounters",
              "streams": [
                "Microsoft-InsightsMetrics"
              ],
              "samplingFrequencyInSeconds": 60,
              "counterSpecifiers": [
                "\\VMInsights\\DetailedMetrics"
              ]
            }
          ],
          "extensions": [
            {
              "name": "DependencyAgentDataSource",
              "extensionName": "DependencyAgent",
              "streams": [
                "Microsoft-ServiceMap"
              ],
              "extensionSettings": {}
            }
          ]
        },
        "destinations": {
          "logAnalytics": [
            {
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": [
              "Microsoft-InsightsMetrics",
              "Microsoft-ServiceMap"
            ],
            "destinations": [
              "[parameters('logAnalyticsWorkspaceName')]"
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-11-01",
      "name": "vm-jumpbox",
      "location": "[parameters('location')]",
      "zones": "[pickZones('Microsoft.Compute', 'virtualMachines', parameters('location'), 1)]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "additionalCapabilities": {
          "hibernationEnabled": false,
          "ultraSSDEnabled": false
        },
        "applicationProfile": null,
        "availabilitySet": null,
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": null
          }
        },
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "licenseType": "Windows_Client",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'nic-jumpbox')]"
            }
          ]
        },
        "osProfile": {
          "computerName": "jumpbox",
          "adminUsername": "[parameters('jumpBoxAdminName')]",
          "adminPassword": "[parameters('jumpBoxAdminPassword')]",
          "allowExtensionOperations": true,
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault"
            },
            "provisionVMAgent": true
          }
        },
        "priority": "Regular",
        "scheduledEventsProfile": {
          "osImageNotificationProfile": {
            "enable": true
          },
          "terminateNotificationProfile": {
            "enable": true
          }
        },
        "securityProfile": {
          "securityType": "TrustedLaunch",
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          }
        },
        "storageProfile": {
          "dataDisks": [],
          "diskControllerType": "SCSI",
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadOnly",
            "deleteOption": "Delete",
            "diffDiskSettings": null,
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "encryptionSettings": {
              "enabled": false
            },
            "osType": "Windows",
            "diskSizeGB": 127
          },
          "imageReference": {
            "offer": "windows-11",
            "publisher": "MicrosoftWindowsDesktop",
            "sku": "win11-24h2-pro",
            "version": "latest"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'nic-jumpbox')]"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
      "apiVersion": "2023-03-11",
      "scope": "[format('Microsoft.Compute/virtualMachines/{0}', 'vm-jumpbox')]",
      "name": "dcra-vminsights",
      "properties": {
        "dataCollectionRuleId": "[resourceId('Microsoft.Insights/dataCollectionRules', 'dcr-jumpbox')]",
        "description": "VM Insights DCR association with the jump box."
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'vm-jumpbox', 'DependencyAgentWindows')]",
        "[resourceId('Microsoft.Compute/virtualMachines', 'vm-jumpbox')]",
        "[resourceId('Microsoft.Insights/dataCollectionRules', 'dcr-jumpbox')]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Network/bastionHosts/{0}', format('bastion-{0}', parameters('hubBaseName')))]",
      "name": "default",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "BastionAuditLogs",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/bastionHosts', format('bastion-{0}', parameters('hubBaseName')))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Network/azureFirewalls/{0}', 'fw-egress')]",
      "name": "default",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "logAnalyticsDestinationType": "Dedicated",
        "logs": [
          {
            "category": "AzureFirewallApplicationRule",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AzureFirewallNetworkRule",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AzureFirewallDnsProxy",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWNetworkRule",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWApplicationRule",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWNatRule",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWThreatIntel",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWIdpsSignature",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWDnsQuery",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWFqdnResolveFailure",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWFatFlow",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWFlowTrace",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWApplicationRuleAggregation",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWNetworkRuleAggregation",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          },
          {
            "category": "AZFWNatRuleAggregation",
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', 'fw-egress')]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Insights/dataCollectionRules/{0}', 'dcr-jumpbox')]",
      "name": "default",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "LogErrors",
            "categoryGroup": null,
            "enabled": true,
            "retentionPolicy": {
              "days": 0,
              "enabled": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "[resourceId('Microsoft.Insights/dataCollectionRules', 'dcr-jumpbox')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "updateRouteTable",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2024-05-01",
              "name": "udr-internet-to-firewall",
              "location": "[parameters('location')]",
              "properties": {
                "routes": [
                  {
                    "name": "internet-to-firewall",
                    "properties": {
                      "addressPrefix": "0.0.0.0/0",
                      "nextHopType": "VirtualAppliance",
                      "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', 'fw-egress'), '2024-05-01').ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', 'fw-egress')]",
        "[resourceId('Microsoft.Network/routeTables', 'udr-internet-to-firewall')]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsResolvers",
      "apiVersion": "2022-07-01",
      "name": "[format('dnsresolver-{0}', parameters('hubBaseName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsResolvers/inboundEndpoints",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', format('dnsresolver-{0}', parameters('hubBaseName')), 'inbound-endpoint')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "privateIpAllocationMethod": "Static",
            "privateIpAddress": "10.0.3.4",
            "subnet": {
              "id": "[format('{0}/subnets/snet-dnsResolverInbound', resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName')))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/dnsResolvers', format('dnsresolver-{0}', parameters('hubBaseName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsResolvers/outboundEndpoints",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', format('dnsresolver-{0}', parameters('hubBaseName')), 'outbound-endpoint')]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[format('{0}/subnets/snet-dnsResolverOutbound', resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]",
        "[resourceId('Microsoft.Network/dnsResolvers', format('dnsresolver-{0}', parameters('hubBaseName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnsForwardingRulesets",
      "apiVersion": "2022-07-01",
      "name": "[format('ruleset-{0}', parameters('hubBaseName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "dnsResolverOutboundEndpoints": [
          {
            "id": "[resourceId('Microsoft.Network/dnsResolvers/outboundEndpoints', format('dnsresolver-{0}', parameters('hubBaseName')), 'outbound-endpoint')]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsResolvers/outboundEndpoints', format('dnsresolver-{0}', parameters('hubBaseName')), 'outbound-endpoint')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2024-03-01",
      "name": "updateVnetDnsSettings",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-05-01",
              "name": "[variables('hubVirtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": [
                    "[reference(resourceId('Microsoft.Network/dnsResolvers/inboundEndpoints', format('dnsresolver-{0}', parameters('hubBaseName')), 'inbound-endpoint'), '2022-07-01').ipConfigurations[0].privateIpAddress]"
                  ]
                },
                "subnets": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName')), '2024-05-01').subnets]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsResolvers/inboundEndpoints', format('dnsresolver-{0}', parameters('hubBaseName')), 'inbound-endpoint')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]"
      ]
    }
  ],
  "outputs": {
    "hubVirtualNetworkName": {
      "type": "string",
      "value": "[variables('hubVirtualNetworkName')]"
    },
    "hubVirtualNetworkId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVirtualNetworkName'))]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[parameters('logAnalyticsWorkspaceName')]"
    },
    "azureFirewallPrivateIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', 'fw-egress'), '2024-05-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "egressRouteTableId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/routeTables', 'udr-internet-to-firewall')]"
    },
    "privateDnsZoneIds": {
      "type": "object",
      "value": {
        "cognitiveservices": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[0])]",
        "aiservices": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[1])]",
        "openai": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[2])]",
        "search": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[3])]",
        "blob": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[4])]",
        "cosmosdb": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[5])]",
        "keyvault": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[6])]",
        "websites": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[7])]"
      }
    },
    "dnsResolverInboundEndpointIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/dnsResolvers/inboundEndpoints', format('dnsresolver-{0}', parameters('hubBaseName')), 'inbound-endpoint'), '2022-07-01').ipConfigurations[0].privateIpAddress]"
    }
  }
}